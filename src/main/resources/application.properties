#debug=true
#logging.level.com.camunda.*=DEBUG
#spring.devtools.restart.enabled=true

#Spring Rest
spring.data.rest.base-path=/api

#Camunda
camunda.bpm.admin-user.id=demo
camunda.bpm.admin-user.password=demo
camunda.bpm.admin-user.firstName=Demo
camunda.bpm.filter.create=All tasks
camunda.bpm.webapp.index-redirect-enabled=false 

# gets disposition from the configured channel
spring.cloud.stream.bindings.quoteSinkChannel.destination=quoteUpdates
spring.cloud.stream.bindings.quoteSinkChannel.group=quoteGroup
spring.cloud.stream.bindings.quoteRequestChannelOutput.destination=quoteUpdates

# defines the payload type for the publishers and subscribers
spring.cloud.stream.default.contentType=application/json

#Security
security.ignored=/**
security.basic.enabled=false
management.security.enabled=false

#Dev live-reload using spring dev tools
#spring.devtools.livereload.enabled=true
#spring.devtools.restart.additional-paths=/src/main/js
#spring.devtools.restart.enabled=true

#Settings for SMTP server message delivery
app.mailServerHost=smtp.sendgrid.net
app.mailServerPort=587
app.mailServerDefaultFrom=noreply@test.com
app.mailServerUserName=apikey
# WARNING: do not use send grid account will be shut down.
app.mailServerPassword=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
app.mailServerUseTls=true

# How database updates should be handled
spring.jpa.hibernate.ddl-auto=update

# data source properties
spring.datasource.username=sa
spring.datasource.password=sa
jdbc.database.url=jdbc:h2:./camunda-db;DB_CLOSE_DELAY=-1;MVCC=TRUE;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.url=${jdbc.database.url}

# username, password and role to login to the system. This should only be run once with the init profile.
app.security[0].username=admin
# password should be externalized property
app.security[0].password=admin
app.security[0].roles[0]=USER

# system email addresses
#app.system-email=${SYSTEM_EMAIL}
#app.manager-email=${MANAGER_EMAIL}
#app.default-from-email=${DEFAULT_FROM_EMAIL}

# Grace period setting will be applied in pairs. 
# When the buffer-days is greater than remaining-buffer-days setting the cron expression will be applied.
# For example if the remaining days until final notice is 30 and the remaining-buffer-days is set to 20 the cron 0 0/3 * * * ? will be set as the grace period.
app.grace-period-settings[0].cron=0 0/3 * * * ?
app.grace-period-settings[0].remaining-buffer-days=20
# when more than 10 days left until final notice use cron 0 0/2 * * * ?
app.grace-period-settings[1].cron=0 0/2 * * * ?
app.grace-period-settings[1].remaining-buffer-days=10
app.grace-period-settings[2].cron=0 0/1 * * * ?
# when more than 0 days left until final notice use cron 0 0/1 * * * ?
app.grace-period-settings[2].remaining-buffer-days=0

# Sets the frequency the system will check the database for leases that need renewal. Also starting the renewals workflow for each lease. 
app.cron.renewal-start=0 0 7 * * ?
# Sets the frequency the system will clean up the completed lease renewals. Also archives messages on ended renewals. 
app.cron.renewal-clean=0 0/3 * * * ?
# The number of days a lease renewal workflow should be started before a lease expires.
app.cron.renewal-kickoff-buffer-days=100
# The number of days before the final notce is sent. Buffer until the unit needs to be listed
app.renewal-setting.lease-expiration-buffer-days=50