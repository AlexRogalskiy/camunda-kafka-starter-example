{
	"info": {
		"_postman_id": "09b4eb67-3370-467b-9b02-4609755ff6eb",
		"name": "MOSA-PoC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "start-service-request-process-instance",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b27fe844-12da-4761-ae59-03bad5c7d558",
						"exec": [
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"",
							"    var data = JSON.parse(responseBody);",
							"",
							"    //set the tasks into PM environment",
							"    pm.environment.set(\"businessKey\", data.businessKey);",
							"    console.log( \"Business Key: \"",
							"                        +pm.environment.get(\"businessKey\") );",
							"    ",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"businessKey\" : \"{{$guid}}\",\n    \"variables\": {\n        \"status\": {\n            \"value\": \"0\",\n            \"type\":\"Integer\"\n        },\n        \"error\": {\n            \"value\": false\n        }\n\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/engine-rest/process-definition/key/service-request/start",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"engine-rest",
						"process-definition",
						"key",
						"service-request",
						"start"
					]
				},
				"description": "Starts a process instance with the rest API"
			},
			"response": []
		},
		{
			"name": "message-corrolation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d6d009d-ec4b-4949-b2cd-0ca4112665c1",
						"exec": [
							"pm.test(\"response must be valid and have a body\", function () {",
							"     // assert that the status code is 200",
							"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants",
							"     // assert that the response has a valid JSON body",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f5741e52-b29a-42bc-8ee2-0a7c6a36292b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"messageName\" : \"message-homeowner-poi\",\n  \"businessKey\" : \"{{loanNumber}}\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "http://localhost:8080/engine-rest/message",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"engine-rest",
						"message"
					]
				},
				"description": "Starts a process instance with the rest API"
			},
			"response": []
		},
		{
			"name": "Get Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7979a9da-0236-4bdf-8339-33bcac576c80",
						"exec": [
							"pm.test(\"test task exists\", function () { ",
							"",
							"    // var taskName = \"Task_0fgkskn\";",
							"",
							"    var tasks = JSON.parse(responseBody);",
							"    ",
							"    // var tasks = [];",
							"    // data.forEach(function(obj, index) { ",
							"    //     // console.log(obj.taskDefinitionKey);",
							"    //     //expecting each extranl task to be of the same task        ",
							"    //     if(obj.taskDefinitionKey === taskName){",
							"    //         //buffer the tasks to a list for later use",
							"    //         tasks.push(obj);",
							"    //     }",
							"    // });",
							"    ",
							"    //set the tasks into PM environment",
							"    // pm.environment.set(\"tasks\", tasks);",
							"    pm.environment.set(\"userTaskId\", tasks[0].id);",
							"    console.log( \"Set: userTaskId=\"",
							"                        +tasks[0].id );",
							"    ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/engine-rest/task",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"engine-rest",
						"task"
					]
				}
			},
			"response": []
		},
		{
			"name": "Complete Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6620ecee-fb95-4413-9f3d-91e03dacd661",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"variables\": {\n        \"approved\": {\n            \"value\": true\n        }\n    },\n    \"withVariablesInReturn\": true\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "http://localhost:8080/engine-rest/task/{{userTaskId}}/complete",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"engine-rest",
						"task",
						"{{userTaskId}}",
						"complete"
					]
				}
			},
			"response": []
		},
		{
			"name": "notfiy homeowner end point",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9090/api/Insurance/notifyHomeOwner/mortgagenumber/${businessKey}/language/en/firstname/${firstName}/lastname/${lastName}/preference/email/phonenumber/6478026187/email/raj.gohil%40mcap.com",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"api",
						"Insurance",
						"notifyHomeOwner",
						"mortgagenumber",
						"${businessKey}",
						"language",
						"en",
						"firstname",
						"${firstName}",
						"lastname",
						"${lastName}",
						"preference",
						"email",
						"phonenumber",
						"6478026187",
						"email",
						"raj.gohil%40mcap.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "get prefrences",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:9090/customer/v1/default/customer/e298351a-d254-418f-b112-003f2d1c4f9f",
					"host": [
						"localhost"
					],
					"port": "9090",
					"path": [
						"customer",
						"v1",
						"default",
						"customer",
						"e298351a-d254-418f-b112-003f2d1c4f9f"
					]
				}
			},
			"response": []
		},
		{
			"name": "New ServiceRequest Event Start Process",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\": \"Paul\", \"businessKey\": \"{{$guid}}\", \"primaryPhone\":\"333-443-4543\",\"secondaryPhone\":\"\",\"email\":\"\", \"disposition\": false} "
				},
				"url": {
					"raw": "localhost:8080/contact",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contact"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}